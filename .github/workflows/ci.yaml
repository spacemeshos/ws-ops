name: Deploy

on: push

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      PAGERDUTY_TOKEN: ${{ secrets.PAGERDUTY_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: test
          location: europe-west1-b

      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Fmt
        run: cd terraform; terraform fmt -check

      - name: Terraform Init
        run: cd terraform; terraform init

      - name: Terraform Plan
        run: cd terraform; terraform plan -input=false -no-color
        id: plan
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan ðŸ“– ${{ steps.plan.outcome }}
              <details>
                <summary>Show Plan</summary>
                \`\`\`
                ${{ steps.plan.outputs.stdout }}
                \`\`\`
              </details>
            `;
              
            if (context.pull_request) {
              github.issues.createComment({
                issue_number: context.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
            }

      - name: Terraform Plan Status
        run: exit 1
        if: steps.plan.outcome == 'failure'

      - run: cd terraform; terraform apply -auto-approve
        if: github.ref == 'refs/heads/master'

      - run: cd terraform; terraform output -json > ../terraform.json

      - name: Get helm list
        run: helm list -o json > helm-list.json

      - name: Install gomplate
        run: |
          curl -sSL -o gomplate https://github.com/hairyhenderson/gomplate/releases/download/v3.8.0/gomplate_linux-amd64
          chmod +x gomplate

      - name: Download configs
        run: |
          ./gomplate \
            -f templates/download-configs.t \
            -d networks=networks.json \
            --exec-pipe -- bash

      - name: Deploy helms
        if: github.ref == 'refs/heads/master'
        run: |
          ./gomplate \
            -f templates/networks.t \
            -d networks=networks.json \
            -d helms=helm-list.json \
            -d terraform=terraform.json \
            --exec-pipe -- bash
