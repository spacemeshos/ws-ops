name: Deploy

on: [push]
#on:
#  push:
#    branches:
#      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      PAGERDUTY_TOKEN: ${{ secrets.PAGERDUTY_TOKEN }}
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: test
          location: europe-west1-b

      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - run: terraform fmt -check

      - run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false
        if: github.event_name == 'pull_request'
        id: plan
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v3
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`
              <details><summary>Show Plan</summary>
              \`\`\`${{ steps.plan.outputs.stdout }}\`\`\`
              </details>
              *Pusher: @${{ github.actor }},
              Action: \`${{ github.event_name }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

#  deploy:
#    runs-on: ubuntu-latest
#      - uses: actions/checkout@v2
#
#      - uses: google-github-actions/get-gke-credentials@main
#        with:
#          cluster_name: test
#          location: europe-west1-b
#          credentials: ${{ secrets.gcp_credentials }}
#
#      - name: Get helm list
#        run: helm list -o json > helm-list.json
#
#      - name: Install gomplate
#        run: |
#          curl -sSL -o gomplate https://github.com/hairyhenderson/gomplate/releases/download/v3.8.0/gomplate_linux-amd64
#          chmod +x gomplate
#
#      - name: Download configs
#        run: |
#          ./gomplate \
#            -f templates/download-configs.t \
#            -d networks=networks.json \
#            --exec-pipe -- bash
#
#      - name: Deploy helms
#        run: |
#          ./gomplate \
#            -f templates/networks.t \
#            -d networks=networks.json \
#            -d helms=helm-list.json \
#            --exec-pipe -- bash
