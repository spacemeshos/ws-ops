name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PAGERDUTY_TOKEN: ${{ secrets.PAGERDUTY_TOKEN }}
      STATUSPAGE_TOKEN: ${{ secrets.STATUSPAGE_TOKEN }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: test
          location: europe-west1-b

      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Fmt
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false -no-color
        id: plan
        env:
          TF_VAR_kube_config: ${{ env.KUBECONFIG }}
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan ðŸ“– ${{ steps.plan.outcome }}
            \`\`\`
            ${{ steps.plan.outputs.stdout }}
            \`\`\`
            `;
              
            var id;
            if (context.pull_request) {
              id = context.pull_request.number;
            } else if (context.payload.pull_request) {
              id = context.payload.pull_request.number;
            }
            if (id) {
              github.issues.createComment({
                issue_number: id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
            }

      - name: Terraform Plan Status
        run: exit 1
        if: steps.plan.outcome == 'failure'

      - name: Terraform Apply
        run: terraform apply -auto-approve
        if: github.ref == 'refs/heads/main'
        env:
          TF_VAR_kube_config: ${{ env.KUBECONFIG }}
